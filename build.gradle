plugins {
    id 'application'
    id 'maven-publish'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.springframework.boot' version '2.5.12'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.beryx.jlink' version '2.26.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'org.springframework.boot'

def javafxVersion = '17.0.16'
dependencies {
    implementation 'org.webcurator:webcurator-core:3.2.4-SNAPSHOT'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'
    implementation "org.openjfx:javafx-controls:$javafxVersion"
    implementation "org.openjfx:javafx-graphics:$javafxVersion:win"
    implementation "org.openjfx:javafx-base:$javafxVersion:win"
    implementation "org.openjfx:javafx-web:$javafxVersion:win"
    implementation 'org.eclipse.jetty:jetty-server:11.0.14'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.14'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'org.powermock:powermock-module-junit4:1.5.1'
}

group = 'org.webcurator'
version = '1.1'
description = 'Web Curator Tool Visualization'
sourceCompatibility = '1.17'

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from(sourceSets.main.allJava)
}

tasks.register('testsJar', Jar) {
    archiveClassifier.set('tests')
    from(sourceSets.test.output)
}

// tasks.register('cleanUI', Delete) {
//     group = "BuildUI"
//     description = "Remove the dist folder and webapp folder"
//     delete './ui/dist', './src/main/resources/web'
//     followSymlinks = true
//     doLast {
//         println 'UI cleaning done!'
//     }
// }

// tasks.register('installUI', Exec) {
//     group = "BuildUI"
//     description = "Install the dependencies for UI"
//     workingDir './ui'
//     commandLine 'npm', 'install'
//     doLast {
//         println 'UI installation done!'
//     }
// }

// tasks.register('buildUI', Exec) {
//     group = "BuildUI"
//     description = "Run npm install and build-only"
//     dependsOn tasks.installUI
//     workingDir './ui'
//     commandLine 'npm', 'run', 'build-only'
//     doLast {
//         println 'UI building done!'
//     }
// }


// tasks.register('copyUI', Copy) {
//     group = "BuildUI"
//     description = "Copy the files from dist folder to webapp folder"
//     dependsOn tasks.buildUI
//     from './ui/dist'
//     into './src/main/resources/web'
//     doLast {
//         println 'UI copying done!'
//         println 'All UI tasks done!'
//     }
// }

// bootRun {
//     dependsOn tasks.copyUI
// }

// clean {
//     dependsOn tasks.cleanUI
// }

// build {
//     dependsOn tasks.copyUI
// }

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.web' ]
}

application {
    mainClass = 'org.webcurator.visualization.springboot.MainApp'
}

tasks.register('jpackageWin', Exec) {
    group = "build"
    description = "Package as Windows EXE"
    commandLine 'jpackage',
            '--type', 'exe',
            '--input', 'build/libs',
            '--name', 'wava',
            '--main-jar', 'wava-tool-1.1.jar',
            '--main-class', 'org.webcurator.visualization.springboot.MainApp',
            '--dest', 'build/dist',
            '--win-shortcut'
}

tasks.register('jpackageDeb', Exec) {
    group = "build"
    description = "Package as Debian DEB"
    commandLine 'jpackage',
            '--type', 'deb',
            '--input', 'build/libs',
            '--name', 'wava',
            '--main-jar', 'wava-tool-1.1.jar',
            '--main-class', 'org.webcurator.visualization.springboot.MainApp',
            '--dest', 'build/dist',
            '--install-dir', '/opt/wava'
}